{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\PhpstormProjects\\\\filtering\\\\filtering\\\\src\\\\components\\\\JobPostingModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport '../styles/JobPostingModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst JobPostingModal = () => {\n  _s();\n  const [jobTitle, setJobTitle] = useState('');\n  const [jobDescription, setJobDescription] = useState('');\n  const [requiredSkills, setRequiredSkills] = useState('');\n  const [experience, setExperience] = useState('');\n  const [salaryRange, setSalaryRange] = useState('');\n  const [expiryDate, setExpiryDate] = useState('');\n  const [jobType, setJobType] = useState('full-time');\n  const [postedDate, setPostedDate] = useState(new Date().toISOString());\n  const {\n    id\n  } = useParams(); // Lấy id từ URL để biết đây là chế độ sửa hay tạo mới\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (id) {\n      // Nếu có id, fetch dữ liệu job để chỉnh sửa\n      const fetchJobPosting = async () => {\n        try {\n          const response = await fetch(`http://localhost:3001/job-postings/${id}`);\n          const data = await response.json();\n          setJobTitle(data.jobTitle);\n          setJobDescription(data.jobDescription);\n          setRequiredSkills(data.requiredSkills);\n          setExperience(data.experience);\n          setSalaryRange(data.salaryRange);\n          setExpiryDate(data.expiryDate);\n          setJobType(data.jobType);\n          setPostedDate(data.postedDate);\n        } catch (error) {\n          console.error('Lỗi khi lấy job posting:', error);\n        }\n      };\n      fetchJobPosting();\n    }\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const jobPosting = {\n      jobTitle,\n      jobDescription,\n      requiredSkills,\n      experience,\n      salaryRange,\n      expiryDate,\n      jobType,\n      postedDate\n    };\n    try {\n      const method = id ? 'PUT' : 'POST';\n      const url = id ? `http://localhost:3001/job-postings/${id}` : 'http://localhost:3001/job-postings';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(jobPosting)\n      });\n      if (!response.ok) {\n        throw new Error('Lỗi khi lưu job posting');\n      }\n      navigate('/job-postings'); // Chuyển về trang danh sách job\n    } catch (error) {\n      console.error('Lỗi khi lưu job posting:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-posting-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: id ? 'Edit Job Posting' : 'Create New Job Posting'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(JobPostingModal, \"9g+gL+zkH9aF3C3Y8vsoqgQjM+E=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = JobPostingModal;\nexport default JobPostingModal;\nvar _c;\n$RefreshReg$(_c, \"JobPostingModal\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Modal","jsxDEV","_jsxDEV","setAppElement","JobPostingModal","_s","jobTitle","setJobTitle","jobDescription","setJobDescription","requiredSkills","setRequiredSkills","experience","setExperience","salaryRange","setSalaryRange","expiryDate","setExpiryDate","jobType","setJobType","postedDate","setPostedDate","Date","toISOString","id","navigate","fetchJobPosting","response","fetch","data","json","error","console","handleSubmit","e","preventDefault","jobPosting","method","url","headers","body","JSON","stringify","ok","Error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/admin/PhpstormProjects/filtering/filtering/src/components/JobPostingModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport '../styles/JobPostingModal.css';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst JobPostingModal = () => {\r\n    const [jobTitle, setJobTitle] = useState('');\r\n    const [jobDescription, setJobDescription] = useState('');\r\n    const [requiredSkills, setRequiredSkills] = useState('');\r\n    const [experience, setExperience] = useState('');\r\n    const [salaryRange, setSalaryRange] = useState('');\r\n    const [expiryDate, setExpiryDate] = useState('');\r\n    const [jobType, setJobType] = useState('full-time');\r\n    const [postedDate, setPostedDate] = useState(new Date().toISOString());\r\n\r\n    const { id } = useParams(); // Lấy id từ URL để biết đây là chế độ sửa hay tạo mới\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            // Nếu có id, fetch dữ liệu job để chỉnh sửa\r\n            const fetchJobPosting = async () => {\r\n                try {\r\n                    const response = await fetch(`http://localhost:3001/job-postings/${id}`);\r\n                    const data = await response.json();\r\n                    setJobTitle(data.jobTitle);\r\n                    setJobDescription(data.jobDescription);\r\n                    setRequiredSkills(data.requiredSkills);\r\n                    setExperience(data.experience);\r\n                    setSalaryRange(data.salaryRange);\r\n                    setExpiryDate(data.expiryDate);\r\n                    setJobType(data.jobType);\r\n                    setPostedDate(data.postedDate);\r\n                } catch (error) {\r\n                    console.error('Lỗi khi lấy job posting:', error);\r\n                }\r\n            };\r\n            fetchJobPosting();\r\n        }\r\n    }, [id]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const jobPosting = {\r\n            jobTitle,\r\n            jobDescription,\r\n            requiredSkills,\r\n            experience,\r\n            salaryRange,\r\n            expiryDate,\r\n            jobType,\r\n            postedDate\r\n        };\r\n\r\n        try {\r\n            const method = id ? 'PUT' : 'POST';\r\n            const url = id ? `http://localhost:3001/job-postings/${id}` : 'http://localhost:3001/job-postings';\r\n\r\n            const response = await fetch(url, {\r\n                method,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(jobPosting)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Lỗi khi lưu job posting');\r\n            }\r\n\r\n            navigate('/job-postings'); // Chuyển về trang danh sách job\r\n        } catch (error) {\r\n            console.error('Lỗi khi lưu job posting:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"job-posting-modal\">\r\n            <h2>{id ? 'Edit Job Posting' : 'Create New Job Posting'}</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                {/* Các trường input như trước */}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobPostingModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}