{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\PhpstormProjects\\\\filtering\\\\filtering\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = ({\n  toggleForm\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [emailError, setEmailError] = useState('');\n  const [emailValid, setEmailValid] = useState(true);\n  const [email, setEmail] = useState(''); // Add state for email input\n\n  // Function to check if the email already exists\n  const checkEmail = async email => {\n    try {\n      const response = await fetch(`http://localhost:3001/check-email?email=${email}`);\n      if (!response.ok) {\n        if (response.status === 404) {\n          setEmailError('API không tồn tại hoặc chưa được định nghĩa.');\n          setEmailValid(false);\n        } else {\n          const data = await response.json();\n          setEmailError(data.message);\n          setEmailValid(false);\n        }\n      } else {\n        setEmailError('');\n        setEmailValid(true);\n      }\n    } catch (error) {\n      console.error('Lỗi kiểm tra email:', error);\n      setEmailError('Có lỗi xảy ra khi kết nối tới server.');\n      setEmailValid(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const fullname = e.target.fullname.value;\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n    const confirmPassword = e.target['confirm-password'].value;\n    const user_type = e.target['user-type'].value;\n\n    // Password validation\n    if (password !== confirmPassword) {\n      alert(\"Mật khẩu và xác nhận mật khẩu không khớp.\");\n      return;\n    }\n    if (password.length < 8) {\n      alert(\"Mật khẩu phải có ít nhất 8 ký tự.\");\n      return;\n    }\n    if (!emailValid) {\n      alert(\"Email không hợp lệ. Vui lòng nhập email khác.\");\n      return;\n    }\n    try {\n      setIsLoading(true);\n      const res = await fetch('http://localhost:3001/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fullname,\n          email,\n          password,\n          user_type\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        alert(\"Đăng ký thành công\");\n        window.location.href = '/'; // Redirect after success\n      } else {\n        alert(`Đăng ký thất bại: ${data.message || 'Vui lòng kiểm tra thông tin.'}`);\n      }\n    } catch (error) {\n      console.error(\"Có lỗi xảy ra:\", error);\n      alert(\"Có lỗi xảy ra khi đăng ký.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle email input change and reset error state\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n    setEmailError(''); // Clear the error when the user starts typing a new email\n    setEmailValid(true); // Reset email validity\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fullname\",\n        children: \"Full Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"fullname\",\n        name: \"fullname\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        required: true,\n        onBlur: e => checkEmail(e.target.value) // Gọi hàm kiểm tra email khi trường email mất tiêu điểm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirm-password\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirm-password\",\n        name: \"confirm-password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user-type\",\n        children: \"User Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"user-type\",\n        name: \"user-type\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"applicant\",\n          children: \"Applicant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"recruiter\",\n          children: \"Recruiter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        disabled: isLoading || !emailValid,\n        children: isLoading ? 'Registering...' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"links\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Already have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: toggleForm,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"wDlqrhotUzGHRH4482TaOmz6t+U=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","toggleForm","_s","isLoading","setIsLoading","emailError","setEmailError","emailValid","setEmailValid","email","setEmail","checkEmail","response","fetch","ok","status","data","json","message","error","console","handleSubmit","e","preventDefault","fullname","target","value","password","confirmPassword","user_type","alert","length","res","method","headers","body","JSON","stringify","window","location","href","handleEmailChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","required","onBlur","style","color","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/admin/PhpstormProjects/filtering/filtering/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Register = ({ toggleForm }) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [emailError, setEmailError] = useState('');\r\n    const [emailValid, setEmailValid] = useState(true);\r\n    const [email, setEmail] = useState(''); // Add state for email input\r\n\r\n    // Function to check if the email already exists\r\n    const checkEmail = async (email) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:3001/check-email?email=${email}`);\r\n\r\n            if (!response.ok) {\r\n                if (response.status === 404) {\r\n                    setEmailError('API không tồn tại hoặc chưa được định nghĩa.');\r\n                    setEmailValid(false);\r\n                } else {\r\n                    const data = await response.json();\r\n                    setEmailError(data.message);\r\n                    setEmailValid(false);\r\n                }\r\n            } else {\r\n                setEmailError('');\r\n                setEmailValid(true);\r\n            }\r\n        } catch (error) {\r\n            console.error('Lỗi kiểm tra email:', error);\r\n            setEmailError('Có lỗi xảy ra khi kết nối tới server.');\r\n            setEmailValid(false);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const fullname = e.target.fullname.value;\r\n        const email = e.target.email.value;\r\n        const password = e.target.password.value;\r\n        const confirmPassword = e.target['confirm-password'].value;\r\n        const user_type = e.target['user-type'].value;\r\n\r\n        // Password validation\r\n        if (password !== confirmPassword) {\r\n            alert(\"Mật khẩu và xác nhận mật khẩu không khớp.\");\r\n            return;\r\n        }\r\n\r\n        if (password.length < 8) {\r\n            alert(\"Mật khẩu phải có ít nhất 8 ký tự.\");\r\n            return;\r\n        }\r\n\r\n        if (!emailValid) {\r\n            alert(\"Email không hợp lệ. Vui lòng nhập email khác.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setIsLoading(true);\r\n            const res = await fetch('http://localhost:3001/register', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ fullname, email, password, user_type })\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            if (res.ok) {\r\n                alert(\"Đăng ký thành công\");\r\n                window.location.href = '/'; // Redirect after success\r\n            } else {\r\n                alert(`Đăng ký thất bại: ${data.message || 'Vui lòng kiểm tra thông tin.'}`);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Có lỗi xảy ra:\", error);\r\n            alert(\"Có lỗi xảy ra khi đăng ký.\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Handle email input change and reset error state\r\n    const handleEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n        setEmailError(''); // Clear the error when the user starts typing a new email\r\n        setEmailValid(true); // Reset email validity\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Register</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"fullname\">Full Name</label>\r\n                <input type=\"text\" id=\"fullname\" name=\"fullname\" required />\r\n\r\n                <label htmlFor=\"email\">Email Address</label>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    required\r\n                    onBlur={(e) => checkEmail(e.target.value)} // Gọi hàm kiểm tra email khi trường email mất tiêu điểm\r\n                />\r\n\r\n                {emailError && <p style={{ color: 'red' }}>{emailError}</p>}\r\n\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" name=\"password\" required />\r\n\r\n                <label htmlFor=\"confirm-password\">Confirm Password</label>\r\n                <input type=\"password\" id=\"confirm-password\" name=\"confirm-password\" required />\r\n\r\n                <label htmlFor=\"user-type\">User Type</label>\r\n                <select id=\"user-type\" name=\"user-type\" required>\r\n                    <option value=\"applicant\">Applicant</option>\r\n                    <option value=\"recruiter\">Recruiter</option>\r\n                </select>\r\n\r\n                <button type=\"submit\" className=\"button\" disabled={isLoading || !emailValid}>\r\n                    {isLoading ? 'Registering...' : 'Register'}\r\n                </button>\r\n\r\n                <div className=\"links\">\r\n                    <span>Already have an account?</span>\r\n                    <a href=\"#\" onClick={toggleForm}>Login</a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}