{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\PhpstormProjects\\\\filtering\\\\filtering\\\\src\\\\components\\\\JobPostingModal.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport '../styles/JobPostingModal.css'; // Thêm CSS nếu cần\nimport { useNavigate } from 'react-router-dom';\n\n// Thiết lập Modal root element\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst ParentComponent = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleOpenModal = () => setIsOpen(true);\n  const handleCloseModal = () => setIsOpen(false);\n  const currentRecruiterId = 123; // Giả sử đây là ID nhà tuyển dụng hiện tại\n\n  const onAddJobPosting = newJobPosting => {\n    // Xử lý khi một job posting mới được thêm\n    console.log('New job posting added:', newJobPosting);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenModal,\n      children: \"Add Job Posting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(JobPostingModal, {\n      isOpen: isOpen,\n      onRequestClose: handleCloseModal,\n      onAddJobPosting: onAddJobPosting,\n      currentRecruiterId: currentRecruiterId // Truyền prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ParentComponent, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = ParentComponent;\nconst JobPostingModal = ({\n  isOpen,\n  onRequestClose,\n  onAddJobPosting,\n  currentRecruiterId\n}) => {\n  _s2();\n  const [jobTitle, setJobTitle] = useState('');\n  const [jobDescription, setJobDescription] = useState('');\n  const [requiredSkills, setRequiredSkills] = useState('');\n  const [experience, setExperience] = useState('');\n  const [salaryRange, setSalaryRange] = useState('');\n  const [expiryDate, setExpiryDate] = useState('');\n  const [jobType, setJobType] = useState('full-time');\n  const [postedDate, setPostedDate] = useState(new Date().toISOString());\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/job-postings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          recruiterId: currentRecruiterId,\n          jobTitle,\n          jobDescription,\n          requiredSkills,\n          experience,\n          salaryRange,\n          expiryDate,\n          jobType,\n          postedDate\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      const data = await response.json();\n      console.log('Job posting saved:', data);\n      resetForm(); // Reset form after saving\n      onAddJobPosting(data); // Cập nhật danh sách job trong component cha\n      onRequestClose(); // Đóng modal\n      navigate('/job-postings'); // Chuyển hướng tới trang danh sách job postings\n    } catch (error) {\n      console.error('Lỗi khi lưu job posting:', error);\n      alert('Có lỗi xảy ra khi lưu thông tin việc làm. Vui lòng thử lại.'); // Thông báo cho người dùng\n    }\n  };\n  const resetForm = () => {\n    setJobTitle('');\n    setJobDescription('');\n    setRequiredSkills('');\n    setExperience('');\n    setSalaryRange('');\n    setExpiryDate('');\n    setJobType('full-time');\n    setPostedDate(new Date().toISOString());\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    contentLabel: \"Create/Edit Job Posting\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create/Edit Job Posting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"job-title\",\n          children: \"Job Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"job-title\",\n          value: jobTitle,\n          onChange: e => setJobTitle(e.target.value),\n          placeholder: \"Enter job title\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button cancel\",\n          type: \"button\",\n          onClick: onRequestClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s2(JobPostingModal, \"H0b6HGHEE9Aqf1hZET5mYe/0XR8=\", false, function () {\n  return [useNavigate];\n});\n_c2 = JobPostingModal;\nexport default ParentComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"ParentComponent\");\n$RefreshReg$(_c2, \"JobPostingModal\");","map":{"version":3,"names":["React","useState","Modal","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","ParentComponent","_s","isOpen","setIsOpen","handleOpenModal","handleCloseModal","currentRecruiterId","onAddJobPosting","newJobPosting","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","JobPostingModal","onRequestClose","_c","_s2","jobTitle","setJobTitle","jobDescription","setJobDescription","requiredSkills","setRequiredSkills","experience","setExperience","salaryRange","setSalaryRange","expiryDate","setExpiryDate","jobType","setJobType","postedDate","setPostedDate","Date","toISOString","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","recruiterId","ok","Error","statusText","data","json","resetForm","error","alert","contentLabel","onSubmit","className","htmlFor","type","id","value","onChange","target","placeholder","required","_c2","$RefreshReg$"],"sources":["C:/Users/admin/PhpstormProjects/filtering/filtering/src/components/JobPostingModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport '../styles/JobPostingModal.css'; // Thêm CSS nếu cần\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Thiết lập Modal root element\r\nModal.setAppElement('#root');\r\n\r\nconst ParentComponent = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const handleOpenModal = () => setIsOpen(true);\r\n    const handleCloseModal = () => setIsOpen(false);\r\n\r\n    const currentRecruiterId = 123; // Giả sử đây là ID nhà tuyển dụng hiện tại\r\n\r\n    const onAddJobPosting = (newJobPosting) => {\r\n        // Xử lý khi một job posting mới được thêm\r\n        console.log('New job posting added:', newJobPosting);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button onClick={handleOpenModal}>Add Job Posting</button>\r\n            <JobPostingModal\r\n                isOpen={isOpen}\r\n                onRequestClose={handleCloseModal}\r\n                onAddJobPosting={onAddJobPosting}\r\n                currentRecruiterId={currentRecruiterId} // Truyền prop\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nconst JobPostingModal = ({ isOpen, onRequestClose, onAddJobPosting, currentRecruiterId }) => {\r\n    const [jobTitle, setJobTitle] = useState('');\r\n    const [jobDescription, setJobDescription] = useState('');\r\n    const [requiredSkills, setRequiredSkills] = useState('');\r\n    const [experience, setExperience] = useState('');\r\n    const [salaryRange, setSalaryRange] = useState('');\r\n    const [expiryDate, setExpiryDate] = useState('');\r\n    const [jobType, setJobType] = useState('full-time');\r\n    const [postedDate, setPostedDate] = useState(new Date().toISOString());\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:3001/job-postings', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    recruiterId: currentRecruiterId,\r\n                    jobTitle,\r\n                    jobDescription,\r\n                    requiredSkills,\r\n                    experience,\r\n                    salaryRange,\r\n                    expiryDate,\r\n                    jobType,\r\n                    postedDate\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Error: ${response.statusText}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log('Job posting saved:', data);\r\n\r\n            resetForm(); // Reset form after saving\r\n            onAddJobPosting(data); // Cập nhật danh sách job trong component cha\r\n            onRequestClose(); // Đóng modal\r\n            navigate('/job-postings'); // Chuyển hướng tới trang danh sách job postings\r\n\r\n        } catch (error) {\r\n            console.error('Lỗi khi lưu job posting:', error);\r\n            alert('Có lỗi xảy ra khi lưu thông tin việc làm. Vui lòng thử lại.'); // Thông báo cho người dùng\r\n        }\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setJobTitle('');\r\n        setJobDescription('');\r\n        setRequiredSkills('');\r\n        setExperience('');\r\n        setSalaryRange('');\r\n        setExpiryDate('');\r\n        setJobType('full-time');\r\n        setPostedDate(new Date().toISOString());\r\n    };\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} onRequestClose={onRequestClose} contentLabel=\"Create/Edit Job Posting\">\r\n            <h2>Create/Edit Job Posting</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                {/* Các trường input như trong mã của bạn */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"job-title\">Job Title:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"job-title\"\r\n                        value={jobTitle}\r\n                        onChange={(e) => setJobTitle(e.target.value)}\r\n                        placeholder=\"Enter job title\"\r\n                        required\r\n                    />\r\n                </div>\r\n                {/* ... các trường input khác ... */}\r\n                <div className=\"button-container\">\r\n                    <button className=\"button\" type=\"submit\">Save</button>\r\n                    <button className=\"button cancel\" type=\"button\" onClick={onRequestClose}>Cancel</button>\r\n                </div>\r\n            </form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ParentComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}